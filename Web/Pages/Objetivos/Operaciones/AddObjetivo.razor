@using Domain.DTOs.Requests.Objetivo
@using Domain.Enums
@inject IRequestService RequestService
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager

<MudDialog MaxWidth="MaxWidth.Small" FullWidth="true">
    <TitleContent>
        <div style="display:flex;align-items:center;gap:12px;padding:4px 0;">
            <MudIcon Icon="@Icons.Material.Filled.Edit" Class="icon-vita" Size="Size.Medium" />
            <MudText Typo="Typo.h5" Style="margin:0;font-weight:500;">
                @(EsGeneral ? "Crear objetivo general" : "Crear objetivo")
            </MudText>
        </div>
    </TitleContent>

    <DialogContent>
        <MudContainer Style="padding:0;">
            <MudGrid Spacing="3">
                <!-- Año (siempre) -->
                <MudItem xs="12" md="6">
                    <MudTextField @bind-Value="_objetivoDto.Año"
                                  Class="vita-adorn"
                                  Label="Año"
                                  Variant="Variant.Outlined"
                                  Type="number"
                                  Required="true"
                                  RequiredError="El año es requerido"
                                  HelperText="Ejemplo: 2025"
                                  Adornment="Adornment.Start"
                                  AdornmentIcon="@Icons.Material.Filled.CalendarMonth"
                                  AdornmentColor="Color.Default" />
                </MudItem>

                <!-- Mes (solo si NO es general) -->
                @if (!EsGeneral)
                {
                    <MudItem xs="12" md="6">
                        <MudTextField @bind-Value="_objetivoDto.Mes"
                                      Class="vita-adorn"
                                      Label="Mes"
                                      Variant="Variant.Outlined"
                                      Type="number"
                                      HelperText="Ingrese el número de mes (1-12)"
                                      Adornment="Adornment.Start"
                                      AdornmentIcon="@Icons.Material.Filled.DateRange"
                                      AdornmentColor="Color.Default" />
                    </MudItem>
                }

                <!-- Meta de Ocupación (siempre) -->
                <MudItem xs="12">
                    <MudTextField @bind-Value="_objetivoDto.MetaOcupacion"
                                  Class="vita-adorn"
                                  Label="Meta de Ocupación (%)"
                                  Variant="Variant.Outlined"
                                  Type="number"
                                  Min="0" Max="100" Step="0.5"
                                  Required="true"
                                  RequiredError="La meta de ocupación es requerida"
                                  HelperText="Ingrese un valor entre 0 y 100"
                                  Adornment="Adornment.Start"
                                  AdornmentIcon="@Icons.Material.Filled.BarChart"
                                  AdornmentColor="Color.Default" />
                </MudItem>

                <MudItem xs="12">
                    <MudDivider Style="margin:8px 0;" />
                </MudItem>
            </MudGrid>
        </MudContainer>
    </DialogContent>

    <DialogActions>
        <MudButton OnClick="Cancel"
                   Variant="Variant.Text"
                   StartIcon="@Icons.Material.Filled.Cancel"
                   Color="Color.Default"
                   Style="padding:16px 24px"
                   Size="Size.Medium">
            Cancelar
        </MudButton>

        <MudButton OnClick="SaveChanges"
                   Variant="Variant.Filled"
                   StartIcon="@Icons.Material.Filled.Save"
                   Class="btn-vita"
                   Size="Size.Medium"
                   Style="margin-left:8px;">
            Guardar
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] private IMudDialogInstance MudDialog { get; set; } = null!;

    [Parameter] public TipoObjetivo TipoObjetivoSeleccionado { get; set; } = TipoObjetivo.General;

    private bool EsGeneral => TipoObjetivoSeleccionado == TipoObjetivo.General;

    private AddObjetivoDto _objetivoDto = new();

    private async Task SaveChanges()
    {
        try
        {
            _objetivoDto.Tipo = TipoObjetivoSeleccionado;

            if (EsGeneral)
            {
                _objetivoDto.Mes = null;
                _objetivoDto.IdCabaña = null;
            }

            var response = await RequestService.PostAsync("api/objetivos", _objetivoDto);

            if (response.IsSuccessStatusCode)
            {
                MudDialog.Close(DialogResult.Ok(true));
                Snackbar.Add("El objetivo fue creado correctamente.", Severity.Success);
            }
            else
            {
                var mensaje = await response.Content.ReadAsStringAsync();
                Snackbar.Add(mensaje, Severity.Error);
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error al crear el objetivo: {ex.Message}", Severity.Error);
        }
    }

    private void Cancel() => MudDialog.Cancel();
}
