<AuthorizeView>
    <Authorized>
        <MudStack Row="true" Spacing="2" Justify="Justify.Center" AlignItems="AlignItems.Center">
            <MudText Typo="Typo.subtitle2" Class="d-inline-flex text-appbar">Hola, @username</MudText>

            <MudButton Variant="Variant.Outlined" Class="btn-appbar" OnClick="EditUser">
                <MudIcon Icon="@Icons.Material.Filled.PersonPin" Class="mr-1" /> Perfil
            </MudButton>

            <MudButton Variant="Variant.Outlined" Class="btn-appbar" OnClick="Logout">
                <MudIcon Icon="@Icons.Material.Filled.ExitToApp" Class="mr-1" /> Salir
            </MudButton>
        </MudStack>
    </Authorized>
    <NotAuthorized>
        <MudStack Row="true" Spacing="2" Justify="Justify.Center" AlignItems="AlignItems.Center">
            <MudButton Href="/login" Variant="Variant.Outlined" Class="btn-appbar">
                <MudIcon Icon="@Icons.Material.Filled.Login" class="mr-1" /> Iniciar sesión
            </MudButton>
            <MudButton Href="/register" Variant="Variant.Outlined" Class="btn-appbar">
                <MudIcon Icon="@Icons.Material.Filled.HowToReg" class="mr-1" /> Registrarse
            </MudButton>
        </MudStack>
    </NotAuthorized>
</AuthorizeView>

@code {
    private string? username;
    private string? role;

    [CascadingParameter] private Task<AuthenticationState> AuthenticationStateTask { get; set; } = null!;
    [Inject] private AuthenticationStateProvider AuthenticationStateProvider { get; set; } = null!;
    [Inject] private AuthService AuthService { get; set; } = null!;
    [Inject] private NavigationManager NavigationManager { get; set; } = null!;

    protected override async Task OnParametersSetAsync()
    {
        username = await AuthService.GetNameAsync();
        role = await AuthService.GetUserRoleAsync();
    }

    private async Task Logout()
    {
        if (AuthenticationStateProvider is AuthenticationProviderJWT customProvider)
        {
            await customProvider.Logout();
        }

        NavigationManager.NavigateTo("/login");
    }

    private void EditUser()
    {
        NavigationManager.NavigateTo("/profile");
    }
}
